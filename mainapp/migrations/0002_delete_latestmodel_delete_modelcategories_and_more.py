# Generated by Django 5.2.2 on 2025-07-07 16:28

import django.contrib.postgres.fields.hstore
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mainapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                DROP MATERIALIZED VIEW IF EXISTS mainapp_latestmodel;
                DROP VIEW IF EXISTS mainapp_latestmodel_categories;
            """,
            reverse_sql="""
                CREATE MATERIALIZED VIEW mainapp_latestmodel AS
                SELECT
                    model.id AS id,
                    model.model_id AS model_id,
                    model.revision AS revision,
                    model.title AS title,
                    model.description AS description,
                    model.rendered_description AS rendered_description,
                    model.upload_date AS upload_date,
                    model.location_id as location_id,
                    model.license AS license,
                    model.rotation AS rotation,
                    model.scale AS scale,
                    model.translation_x AS translation_x,
                    model.translation_y AS translation_y,
                    model.translation_z AS translation_z,
                    model.author_id AS author_id,
                    model.tags AS tags,
                    model.is_hidden AS is_hidden
                FROM mainapp_model model
                    LEFT JOIN mainapp_model newer
                        ON model.model_id = newer.model_id AND
                           model.revision < newer.revision
                WHERE newer.revision is NULL;

                CREATE UNIQUE INDEX mainapp_latestmodel_id_idx ON mainapp_latestmodel (id);

                CREATE VIEW mainapp_latestmodel_categories AS
                SELECT
                    id AS id,
                    model_id AS latestmodel_id,
                    category_id AS category_id
                FROM mainapp_model_categories;
            """
        ),
        migrations.DeleteModel(
            name='LatestModel',
        ),
        migrations.DeleteModel(
            name='ModelCategories',
        ),
        migrations.AddField(
            model_name='model',
            name='latest',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='ban',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='category',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='change',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='location',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='model',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='model',
            name='tags',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name='profile',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterUniqueTogether(
            name='model',
            unique_together={('model_id', 'revision')},
        ),
        migrations.AddIndex(
            model_name='model',
            index=models.Index(fields=['model_id', 'revision'], name='mainapp_mod_model_i_7619e8_idx'),
        ),
        migrations.AddIndex(
            model_name='model',
            index=models.Index(fields=['-upload_date'], name='mainapp_mod_upload__411f1e_idx'),
        ),
        migrations.AddIndex(
            model_name='model',
            index=models.Index(fields=['is_hidden'], name='mainapp_mod_is_hidd_0a5be0_idx'),
        ),
        migrations.AddConstraint(
            model_name='model',
            constraint=models.UniqueConstraint(condition=models.Q(('latest', True)), fields=('model_id',), name='unique_latest_model_per_id'),
        ),
    ]
